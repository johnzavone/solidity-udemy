{
	"id": "85fc5c376e8194efba36aeb0e05a29ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"MyMappingExample.sol": {
				"content": "//SPDX-License-Identifier: Unlicensed\n\npragma solidity ^0.8.7;\n\ncontract SimpleMappingExample {\n\n    mapping(uint8 => bool) public myMapping;\n    mapping(address => bool) public myAddressMapping;\n\n    function setValue(uint8 _index) public {\n        myMapping[_index] = true;\n    }\n\n    function setMyAddressToTrue() public {\n        myAddressMapping[msg.sender] = true;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MyMappingExample.sol": {
				"SimpleMappingExample": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "myAddressMapping",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "myMapping",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setMyAddressToTrue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_index",
									"type": "uint8"
								}
							],
							"name": "setValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MyMappingExample.sol\":64:379  contract SimpleMappingExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyMappingExample.sol\":64:379  contract SimpleMappingExample {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c111ff8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x634899ce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7f0d1ee6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb92ba3b8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MyMappingExample.sol\":201:281  function setValue(uint8 _index) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"MyMappingExample.sol\":287:376  function setMyAddressToTrue() public {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"MyMappingExample.sol\":101:140  mapping(uint8 => bool) public myMapping */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyMappingExample.sol\":146:194  mapping(address => bool) public myAddressMapping */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyMappingExample.sol\":201:281  function setValue(uint8 _index) public {... */\n    tag_10:\n        /* \"MyMappingExample.sol\":270:274  true */\n      0x01\n        /* \"MyMappingExample.sol\":250:259  myMapping */\n      0x00\n        /* \"MyMappingExample.sol\":250:267  myMapping[_index] */\n      dup1\n        /* \"MyMappingExample.sol\":260:266  _index */\n      dup4\n        /* \"MyMappingExample.sol\":250:267  myMapping[_index] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MyMappingExample.sol\":250:274  myMapping[_index] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MyMappingExample.sol\":201:281  function setValue(uint8 _index) public {... */\n      pop\n      jump\t// out\n        /* \"MyMappingExample.sol\":287:376  function setMyAddressToTrue() public {... */\n    tag_12:\n        /* \"MyMappingExample.sol\":365:369  true */\n      0x01\n        /* \"MyMappingExample.sol\":334:350  myAddressMapping */\n      dup1\n        /* \"MyMappingExample.sol\":334:362  myAddressMapping[msg.sender] */\n      0x00\n        /* \"MyMappingExample.sol\":351:361  msg.sender */\n      caller\n        /* \"MyMappingExample.sol\":334:362  myAddressMapping[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MyMappingExample.sol\":334:369  myAddressMapping[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MyMappingExample.sol\":287:376  function setMyAddressToTrue() public {... */\n      jump\t// out\n        /* \"MyMappingExample.sol\":101:140  mapping(uint8 => bool) public myMapping */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"MyMappingExample.sol\":146:194  mapping(address => bool) public myAddressMapping */\n    tag_21:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_26:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_28\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:287   */\n    tag_30:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:281   */\n      tag_32\n        /* \"#utility.yul\":275:280   */\n      dup2\n        /* \"#utility.yul\":250:281   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":152:287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":293:622   */\n    tag_20:\n        /* \"#utility.yul\":352:358   */\n      0x00\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":389:398   */\n      dup3\n        /* \"#utility.yul\":380:387   */\n      dup5\n        /* \"#utility.yul\":376:399   */\n      sub\n        /* \"#utility.yul\":372:404   */\n      slt\n        /* \"#utility.yul\":369:488   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":407:486   */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":369:488   */\n    tag_35:\n        /* \"#utility.yul\":527:528   */\n      0x00\n        /* \"#utility.yul\":552:605   */\n      tag_38\n        /* \"#utility.yul\":597:604   */\n      dup5\n        /* \"#utility.yul\":588:594   */\n      dup3\n        /* \"#utility.yul\":577:586   */\n      dup6\n        /* \"#utility.yul\":573:595   */\n      add\n        /* \"#utility.yul\":552:605   */\n      tag_26\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":542:605   */\n      swap2\n      pop\n        /* \"#utility.yul\":498:615   */\n      pop\n        /* \"#utility.yul\":293:622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":628:953   */\n    tag_9:\n        /* \"#utility.yul\":685:691   */\n      0x00\n        /* \"#utility.yul\":734:736   */\n      0x20\n        /* \"#utility.yul\":722:731   */\n      dup3\n        /* \"#utility.yul\":713:720   */\n      dup5\n        /* \"#utility.yul\":709:732   */\n      sub\n        /* \"#utility.yul\":705:737   */\n      slt\n        /* \"#utility.yul\":702:821   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":740:819   */\n      tag_41\n      tag_37\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":702:821   */\n    tag_40:\n        /* \"#utility.yul\":860:861   */\n      0x00\n        /* \"#utility.yul\":885:936   */\n      tag_42\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":919:925   */\n      dup3\n        /* \"#utility.yul\":908:917   */\n      dup6\n        /* \"#utility.yul\":904:926   */\n      add\n        /* \"#utility.yul\":885:936   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":875:936   */\n      swap2\n      pop\n        /* \"#utility.yul\":831:946   */\n      pop\n        /* \"#utility.yul\":628:953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":959:1068   */\n    tag_43:\n        /* \"#utility.yul\":1040:1061   */\n      tag_45\n        /* \"#utility.yul\":1055:1060   */\n      dup2\n        /* \"#utility.yul\":1040:1061   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1035:1038   */\n      dup3\n        /* \"#utility.yul\":1028:1062   */\n      mstore\n        /* \"#utility.yul\":959:1068   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1284   */\n    tag_17:\n        /* \"#utility.yul\":1161:1165   */\n      0x00\n        /* \"#utility.yul\":1199:1201   */\n      0x20\n        /* \"#utility.yul\":1188:1197   */\n      dup3\n        /* \"#utility.yul\":1184:1202   */\n      add\n        /* \"#utility.yul\":1176:1202   */\n      swap1\n      pop\n        /* \"#utility.yul\":1212:1277   */\n      tag_48\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1263:1272   */\n      dup4\n        /* \"#utility.yul\":1259:1276   */\n      add\n        /* \"#utility.yul\":1250:1256   */\n      dup5\n        /* \"#utility.yul\":1212:1277   */\n      tag_43\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1074:1284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1467   */\n    tag_51:\n        /* \"#utility.yul\":1408:1415   */\n      0x00\n        /* \"#utility.yul\":1437:1461   */\n      tag_53\n        /* \"#utility.yul\":1455:1460   */\n      dup3\n        /* \"#utility.yul\":1437:1461   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1426:1461   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1563   */\n    tag_46:\n        /* \"#utility.yul\":1507:1514   */\n      0x00\n        /* \"#utility.yul\":1550:1555   */\n      dup2\n        /* \"#utility.yul\":1543:1556   */\n      iszero\n        /* \"#utility.yul\":1536:1557   */\n      iszero\n        /* \"#utility.yul\":1525:1557   */\n      swap1\n      pop\n        /* \"#utility.yul\":1473:1563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1569:1695   */\n    tag_54:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1787   */\n    tag_57:\n        /* \"#utility.yul\":1736:1743   */\n      0x00\n        /* \"#utility.yul\":1776:1780   */\n      0xff\n        /* \"#utility.yul\":1769:1774   */\n      dup3\n        /* \"#utility.yul\":1765:1781   */\n      and\n        /* \"#utility.yul\":1754:1781   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2033   */\n    tag_37:\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2022:2023   */\n      dup1\n        /* \"#utility.yul\":2015:2027   */\n      revert\n        /* \"#utility.yul\":2039:2161   */\n    tag_29:\n        /* \"#utility.yul\":2112:2136   */\n      tag_63\n        /* \"#utility.yul\":2130:2135   */\n      dup2\n        /* \"#utility.yul\":2112:2136   */\n      tag_51\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2105:2110   */\n      dup2\n        /* \"#utility.yul\":2102:2137   */\n      eq\n        /* \"#utility.yul\":2092:2155   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2151:2152   */\n      0x00\n        /* \"#utility.yul\":2148:2149   */\n      dup1\n        /* \"#utility.yul\":2141:2153   */\n      revert\n        /* \"#utility.yul\":2092:2155   */\n    tag_64:\n        /* \"#utility.yul\":2039:2161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2167:2285   */\n    tag_33:\n        /* \"#utility.yul\":2238:2260   */\n      tag_66\n        /* \"#utility.yul\":2254:2259   */\n      dup2\n        /* \"#utility.yul\":2238:2260   */\n      tag_57\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2231:2236   */\n      dup2\n        /* \"#utility.yul\":2228:2261   */\n      eq\n        /* \"#utility.yul\":2218:2279   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2272:2273   */\n      dup1\n        /* \"#utility.yul\":2265:2277   */\n      revert\n        /* \"#utility.yul\":2218:2279   */\n    tag_67:\n        /* \"#utility.yul\":2167:2285   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207797debbd8a13cbd7659e7fe51b2b5f0eca641ec317518ea661c4435bcb0196764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610306806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634c111ff814610051578063634899ce1461006d5780637f0d1ee614610077578063b92ba3b8146100a7575b600080fd5b61006b600480360381019061006691906101fb565b6100d7565b005b61007561010b565b005b610091600480360381019061008c91906101fb565b610164565b60405161009e9190610237565b60405180910390f35b6100c160048036038101906100bc91906101ce565b610184565b6040516100ce9190610237565b60405180910390f35b60016000808360ff1660ff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60006020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6000813590506101b3816102a2565b92915050565b6000813590506101c8816102b9565b92915050565b6000602082840312156101e4576101e361029d565b5b60006101f2848285016101a4565b91505092915050565b6000602082840312156102115761021061029d565b5b600061021f848285016101b9565b91505092915050565b61023181610264565b82525050565b600060208201905061024c6000830184610228565b92915050565b600061025d82610270565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b600080fd5b6102ab81610252565b81146102b657600080fd5b50565b6102c281610290565b81146102cd57600080fd5b5056fea26469706673582212207797debbd8a13cbd7659e7fe51b2b5f0eca641ec317518ea661c4435bcb0196764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C111FF8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x634899CE EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7F0D1EE6 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB92BA3B8 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x10B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3 DUP2 PUSH2 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8 DUP2 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E3 PUSH2 0x29D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211 JUMPI PUSH2 0x210 PUSH2 0x29D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F DUP5 DUP3 DUP6 ADD PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x231 DUP2 PUSH2 0x264 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D DUP3 PUSH2 0x270 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB DUP2 PUSH2 0x252 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x290 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x97DEBBD8A13CBD7659E7FE51B2B5F0ECA641EC317518EA66 SHR DIFFICULTY CALLDATALOAD 0xBC 0xB0 NOT PUSH8 0x64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "64:315:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@myAddressMapping_9": {
									"entryPoint": 388,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@myMapping_5": {
									"entryPoint": 356,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMyAddressToTrue_32": {
									"entryPoint": 267,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setValue_21": {
									"entryPoint": 215,
									"id": 21,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2288:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "275:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "250:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:1",
														"type": ""
													}
												],
												"src": "152:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "359:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "405:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "407:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "407:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "380:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "389:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:32:1"
															},
															"nodeType": "YulIf",
															"src": "369:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "498:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "513:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "527:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "517:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "542:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "577:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "573:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "597:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "552:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "542:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "329:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "340:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "352:6:1",
														"type": ""
													}
												],
												"src": "293:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "692:261:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "738:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "740:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "740:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "740:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "713:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "722:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "709:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:32:1"
															},
															"nodeType": "YulIf",
															"src": "702:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "831:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "846:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "850:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "875:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "908:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "919:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "904:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "904:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "885:18:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "875:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "662:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "673:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													}
												],
												"src": "628:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1035:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1040:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1040:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1028:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1028:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1006:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1013:3:1",
														"type": ""
													}
												],
												"src": "959:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1166:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1176:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1188:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1199:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1176:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1250:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1274:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1259:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1212:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1212:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1138:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1150:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1161:4:1",
														"type": ""
													}
												],
												"src": "1074:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1356:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1340:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1323:6:1",
														"type": ""
													}
												],
												"src": "1290:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1416:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1426:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1455:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1437:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1426:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1398:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1408:7:1",
														"type": ""
													}
												],
												"src": "1371:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1525:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1550:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1543:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1525:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1497:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1507:7:1",
														"type": ""
													}
												],
												"src": "1473:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1754:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1769:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1754:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1726:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1736:7:1",
														"type": ""
													}
												],
												"src": "1701:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1882:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1793:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2005:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2015:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1916:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2139:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2151:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2141:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2141:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2141:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2105:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2130:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2112:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2112:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2102:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:43:1"
															},
															"nodeType": "YulIf",
															"src": "2092:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2075:5:1",
														"type": ""
													}
												],
												"src": "2039:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2265:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2231:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2254:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2238:15:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2238:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2228:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:41:1"
															},
															"nodeType": "YulIf",
															"src": "2218:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2201:5:1",
														"type": ""
													}
												],
												"src": "2167:118:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634c111ff814610051578063634899ce1461006d5780637f0d1ee614610077578063b92ba3b8146100a7575b600080fd5b61006b600480360381019061006691906101fb565b6100d7565b005b61007561010b565b005b610091600480360381019061008c91906101fb565b610164565b60405161009e9190610237565b60405180910390f35b6100c160048036038101906100bc91906101ce565b610184565b6040516100ce9190610237565b60405180910390f35b60016000808360ff1660ff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60006020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6000813590506101b3816102a2565b92915050565b6000813590506101c8816102b9565b92915050565b6000602082840312156101e4576101e361029d565b5b60006101f2848285016101a4565b91505092915050565b6000602082840312156102115761021061029d565b5b600061021f848285016101b9565b91505092915050565b61023181610264565b82525050565b600060208201905061024c6000830184610228565b92915050565b600061025d82610270565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b600080fd5b6102ab81610252565b81146102b657600080fd5b50565b6102c281610290565b81146102cd57600080fd5b5056fea26469706673582212207797debbd8a13cbd7659e7fe51b2b5f0eca641ec317518ea661c4435bcb0196764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C111FF8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x634899CE EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7F0D1EE6 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB92BA3B8 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x10B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3 DUP2 PUSH2 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8 DUP2 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E3 PUSH2 0x29D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211 JUMPI PUSH2 0x210 PUSH2 0x29D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F DUP5 DUP3 DUP6 ADD PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x231 DUP2 PUSH2 0x264 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D DUP3 PUSH2 0x270 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB DUP2 PUSH2 0x252 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x290 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x97DEBBD8A13CBD7659E7FE51B2B5F0ECA641EC317518EA66 SHR DIFFICULTY CALLDATALOAD 0xBC 0xB0 NOT PUSH8 0x64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "64:315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;287:89;;;:::i;:::-;;101:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;146:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;201:80;270:4;250:9;:17;260:6;250:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;201:80;:::o;287:89::-;365:4;334:16;:28;351:10;334:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;287:89::o;101:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;146:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:135::-;196:5;234:6;221:20;212:29;;250:31;275:5;250:31;:::i;:::-;152:135;;;;:::o;293:329::-;352:6;401:2;389:9;380:7;376:23;372:32;369:119;;;407:79;;:::i;:::-;369:119;527:1;552:53;597:7;588:6;577:9;573:22;552:53;:::i;:::-;542:63;;498:117;293:329;;;;:::o;628:325::-;685:6;734:2;722:9;713:7;709:23;705:32;702:119;;;740:79;;:::i;:::-;702:119;860:1;885:51;928:7;919:6;908:9;904:22;885:51;:::i;:::-;875:61;;831:115;628:325;;;;:::o;959:109::-;1040:21;1055:5;1040:21;:::i;:::-;1035:3;1028:34;959:109;;:::o;1074:210::-;1161:4;1199:2;1188:9;1184:18;1176:26;;1212:65;1274:1;1263:9;1259:17;1250:6;1212:65;:::i;:::-;1074:210;;;;:::o;1371:96::-;1408:7;1437:24;1455:5;1437:24;:::i;:::-;1426:35;;1371:96;;;:::o;1473:90::-;1507:7;1550:5;1543:13;1536:21;1525:32;;1473:90;;;:::o;1569:126::-;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:86::-;1736:7;1776:4;1769:5;1765:16;1754:27;;1701:86;;;:::o;1916:117::-;2025:1;2022;2015:12;2039:122;2112:24;2130:5;2112:24;:::i;:::-;2105:5;2102:35;2092:63;;2151:1;2148;2141:12;2092:63;2039:122;:::o;2167:118::-;2238:22;2254:5;2238:22;:::i;:::-;2231:5;2228:33;2218:61;;2275:1;2272;2265:12;2218:61;2167:118;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "154800",
								"executionCost": "202",
								"totalCost": "155002"
							},
							"external": {
								"myAddressMapping(address)": "2889",
								"myMapping(uint8)": "2824",
								"setMyAddressToTrue()": "24500",
								"setValue(uint8)": "24747"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 379,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207797debbd8a13cbd7659e7fe51b2b5f0eca641ec317518ea661c4435bcb0196764736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "4C111FF8"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "634899CE"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "7F0D1EE6"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "B92BA3B8"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 379,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 376,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 250,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 250,
											"end": 274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 287,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 334,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 361,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 334,
											"end": 369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 101,
											"end": 140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 146,
											"end": 194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 194,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 287,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 152,
											"end": 287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 250,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 275,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 250,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 250,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 250,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 287,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 293,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 369,
											"end": 488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 369,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 369,
											"end": 488,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 407,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 407,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 407,
											"end": 486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 407,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 369,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 597,
											"end": 604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 588,
											"end": 594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 573,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 552,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 552,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 498,
											"end": 615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 293,
											"end": 622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 293,
											"end": 622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 622,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 628,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 722,
											"end": 731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 713,
											"end": 720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 709,
											"end": 732,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 705,
											"end": 737,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 702,
											"end": 821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 702,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 740,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 740,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 740,
											"end": 819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 740,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 821,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 917,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 904,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 885,
											"end": 936,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 885,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 875,
											"end": 936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 628,
											"end": 953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 959,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1212,
											"end": 1277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1212,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1284,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1437,
											"end": 1461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1461,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1437,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1916,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1916,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2161,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2039,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2137,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2161,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2167,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2167,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2254,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"myAddressMapping(address)": "b92ba3b8",
							"myMapping(uint8)": "7f0d1ee6",
							"setMyAddressToTrue()": "634899ce",
							"setValue(uint8)": "4c111ff8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"myAddressMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"myMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setMyAddressToTrue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MyMappingExample.sol\":\"SimpleMappingExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MyMappingExample.sol\":{\"keccak256\":\"0xe3a3a1cf8612398de670b2a588b6a738c93718fcc59740d08d03b4db669cf69e\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://ff5417ac415e24118b86f70a51ffa02aa865f546f0fa434bc225630032ae5e09\",\"dweb:/ipfs/QmdiV6BSSMGVqiqHCd5oC6D28RwjLtV5W51QMwZNWhgpji\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "MyMappingExample.sol:SimpleMappingExample",
								"label": "myMapping",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint8,t_bool)"
							},
							{
								"astId": 9,
								"contract": "MyMappingExample.sol:SimpleMappingExample",
								"label": "myAddressMapping",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint8,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MyMappingExample.sol": {
				"ast": {
					"absolutePath": "MyMappingExample.sol",
					"exportedSymbols": {
						"SimpleMappingExample": [
							33
						]
					},
					"id": 34,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "SimpleMappingExample",
							"nameLocation": "73:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7f0d1ee6",
									"id": 5,
									"mutability": "mutable",
									"name": "myMapping",
									"nameLocation": "131:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "101:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
										"typeString": "mapping(uint8 => bool)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "109:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "101:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
											"typeString": "mapping(uint8 => bool)"
										},
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "118:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b92ba3b8",
									"id": 9,
									"mutability": "mutable",
									"name": "myAddressMapping",
									"nameLocation": "178:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "146:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "146:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "165:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "240:41:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "myMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "250:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
																"typeString": "mapping(uint8 => bool)"
															}
														},
														"id": 16,
														"indexExpression": {
															"id": 15,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "250:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "270:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "250:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "250:24:0"
											}
										]
									},
									"functionSelector": "4c111ff8",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setValue",
									"nameLocation": "210:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "225:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:14:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:0:0"
									},
									"scope": 33,
									"src": "201:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "324:52:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 24,
															"name": "myAddressMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "334:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 27,
														"indexExpression": {
															"expression": {
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "351:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "351:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "334:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "365:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "334:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "334:35:0"
											}
										]
									},
									"functionSelector": "634899ce",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMyAddressToTrue",
									"nameLocation": "296:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 33,
									"src": "287:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "64:315:0",
							"usedErrors": []
						}
					],
					"src": "39:340:0"
				},
				"id": 0
			}
		}
	}
}