{
	"id": "2589c67ac3f58107f1face8793509a90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"CompileVariables.sol": {
				"content": "pragma solidity ^0.8.7;\n\ncontract WorkingWithVariables {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CompileVariables.sol": {
				"WorkingWithVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CompileVariables.sol\":25:57  contract WorkingWithVariables {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CompileVariables.sol\":25:57  contract WorkingWithVariables {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d786b3a0781b9eea5d3691f4044000c99d85ccd7e2e5cf77e780a047ad8f74464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204d786b3a0781b9eea5d3691f4044000c99d85ccd7e2e5cf77e780a047ad8f74464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH25 0x6B3A0781B9EEA5D3691F4044000C99D85CCD7E2E5CF77E780A DIV PUSH27 0xD8F74464736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "25:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212204d786b3a0781b9eea5d3691f4044000c99d85ccd7e2e5cf77e780a047ad8f74464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH25 0x6B3A0781B9EEA5D3691F4044000C99D85CCD7E2E5CF77E780A DIV PUSH27 0xD8F74464736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "25:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d786b3a0781b9eea5d3691f4044000c99d85ccd7e2e5cf77e780a047ad8f74464736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 57,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CompileVariables.sol\":\"WorkingWithVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CompileVariables.sol\":{\"keccak256\":\"0x23b36ade5db2d698427a0b600ba04dff58f8cf8b2e7404db6d16c52b85286367\",\"urls\":[\"bzz-raw://0f8a4d93d87bb0cb6839563479ec826bf9091f30434d141ffeac2922a048d4f3\",\"dweb:/ipfs/QmeEq9CMxhHaoBwTzZnpy3sTRhww3uTSa67ixetVGf5zUa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> CompileVariables.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CompileVariables.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"CompileVariables.sol": {
				"ast": {
					"absolutePath": "CompileVariables.sol",
					"exportedSymbols": {
						"WorkingWithVariables": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WorkingWithVariables",
							"nameLocation": "34:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:32:0",
							"usedErrors": []
						}
					],
					"src": "0:57:0"
				},
				"id": 0
			}
		}
	}
}